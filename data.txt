-------------------------------------------- computations for 231-extended avoiders

------------ PermLab implementation (our good version):
Computations for all patterns of size k containing a 231 pattern: 
Runtimes: 
\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.000274 & 0.00061 & 0.001179 & 0.001715 \\
9 & 0.000863 & 0.002347 & 0.005514 & 0.007261 \\
10 & 0.002973 & 0.009522 & 0.02519 & 0.038897 \\
11 & 0.010566 & 0.039417 & 0.11887 & 0.209362 \\
12 & 0.037865 & 0.163025 & 0.557408 & 1.12139 \\
13 & 0.139954 & 0.674547 & 2.59183 & 5.82087 \\
14 & 0.516551 & 2.80423 & 11.9308 & 29.7888 \\
15 & 1.92921 & 11.6143 & 54.409 & 148.835 \\
16 & 7.30082 & 48.2353 & 245.582 & 730.895 \\
\end{tabular}
Percent of sequence checks in S_n spent on avoiders: 
\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.777778 & 0.932093 & 0.953401 & 0.945023 \\
9 & 0.787879 & 0.946005 & 0.969363 & 0.970868 \\
10 & 0.797468 & 0.956103 & 0.978837 & 0.983218 \\
11 & 0.806452 & 0.963647 & 0.984794 & 0.989676 \\
12 & 0.814815 & 0.969423 & 0.988717 & 0.993307 \\
13 & 0.822581 & 0.973938 & 0.991404 & 0.995474 \\
14 & 0.829787 & 0.977532 & 0.993303 & 0.99683 \\
15 & 0.836478 & 0.980437 & 0.994684 & 0.997715 \\
16 & 0.842697 & 0.982817 & 0.99571 & 0.998311 \\
\end{tabular}
Average number of sequence checks per avoider in S_n:
\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 2.8 & 16.4713 & 32.7357 & 34.379 \\
9 & 3.05882 & 21.6427 & 52.1133 & 68.6142 \\
10 & 3.31579 & 27.512 & 77.8996 & 123.344 \\
11 & 3.57143 & 34.0814 & 111.02 & 205.41 \\
12 & 3.82609 & 41.3529 & 152.404 & 322.642 \\
13 & 4.08 & 49.3283 & 202.985 & 483.86 \\
14 & 4.33333 & 58.0092 & 263.699 & 698.876 \\
15 & 4.58621 & 67.3971 & 335.485 & 978.491 \\
16 & 4.83871 & 77.4934 & 419.285 & 1334.5 \\
\end{tabular}
Average number of seconds per sequence check (for all permutations):
\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 1.01602e-07 & 5.19345e-08 & 5.27522e-08 & 7.07198e-08 \\
9 & 8.79501e-08 & 4.23321e-08 & 3.79944e-08 & 3.8406e-08 \\
10 & 6.31966e-08 & 2.88546e-08 & 2.39275e-08 & 2.01847e-08 \\
11 & 3.5753e-08 & 1.56436e-08 & 1.42983e-08 & 1.42699e-08 \\
12 & 3.01782e-08 & 1.43077e-08 & 1.38005e-08 & 1.36441e-08 \\
13 & 2.94491e-08 & 1.39252e-08 & 1.34668e-08 & 1.3138e-08 \\
14 & 2.88287e-08 & 1.36592e-08 & 1.32076e-08 & 1.28275e-08 \\
15 & 2.83099e-08 & 1.3462e-08 & 1.30265e-08 & 1.25459e-08 \\
16 & 2.7762e-08 & 1.3219e-08 & 1.28449e-08 & 1.23551e-08 \\
\end{tabular}
Ratio of number of checks per avoider in S_n to number expected: 
\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.7 & 0.890342 & 0.958117 & 0.985778 \\
9 & 0.679739 & 0.883377 & 0.955477 & 0.984303 \\
10 & 0.663158 & 0.878043 & 0.953873 & 0.983474 \\
11 & 0.649351 & 0.873882 & 0.952961 & 0.983059 \\
12 & 0.637681 & 0.870587 & 0.952525 & 0.982917 \\
13 & 0.627692 & 0.867947 & 0.952422 & 0.982957 \\
14 & 0.619048 & 0.865809 & 0.952555 & 0.98312 \\
15 & 0.611494 & 0.864066 & 0.952857 & 0.983367 \\
16 & 0.604839 & 0.862635 & 0.953281 & 0.98367 \\
\end{tabular}

--------- our algorithm FINAL

\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.00017 & 0.000221 & 0.000324 & 0.000513 \\
9 & 0.00056 & 0.000753 & 0.000997 & 0.001304 \\
10 & 0.00179 & 0.002562 & 0.003378 & 0.004153 \\
11 & 0.006796 & 0.009123 & 0.011763 & 0.014254 \\
12 & 0.02456 & 0.033075 & 0.042009 & 0.050101 \\
13 & 0.09083 & 0.120899 & 0.152802 & 0.180994 \\
14 & 0.338223 & 0.483202 & 0.610771 & 0.723377 \\
15 & 1.52269 & 2.15409 & 2.5873 & 3.00059 \\
16 & 6.29455 & 8.74866 & 10.305 & 12.0198 \\
\end{tabular}

------- brute-force algorithm:

\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.000704 & 0.001495 & 0.002157 & 0.002428 \\
9 & 0.002752 & 0.006977 & 0.011058 & 0.012544 \\
10 & 0.01091 & 0.03198 & 0.059522 & 0.074516 \\
11 & 0.044203 & 0.147604 & 0.314055 & 0.438818 \\
12 & 0.180571 & 0.679107 & 1.62358 & 2.57349 \\
13 & 0.730954 & 3.09853 & 8.24977 & 14.5502 \\
14 & 2.99532 & 14.0838 & 41.3082 & 80.3947 \\
15 & 12.124 & 63.0211 & 202.277 & 430.849 \\
16 & 49.4728 & 281.714 & 978.881 & 2266.03 \\
\end{tabular}


----------------------------------------  avoiding computations for {"231", "2431", "24531", "246531"} for n up to 11
---------------- brute force
\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.001902 & 0.015314 & 0.01925 & 0.013707 \\
9 & 0.005256 & 0.071077 & 0.105396 & 0.084227 \\
10 & 0.010913 & 0.351237 & 1.00789 & 1.13034 \\
11 & 0.044532 & 2.78294 & 11.548 & 15.8528 \\
\end{tabular}

---------------- Permlab scalable algorithm

\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.000658 & 0.00654 & 0.010877 & 0.009601 \\
9 & 0.001835 & 0.031336 & 0.060967 & 0.053437 \\
10 & 0.00326 & 0.105117 & 0.3732 & 0.499992 \\
11 & 0.010457 & 0.715573 & 3.77819 & 6.18108 \\
\end{tabular}

----------------our algorithm FINAL

\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.000264 & 0.001848 & 0.003303 & 0.003634 \\
9 & 0.000649 & 0.008741 & 0.019957 & 0.022588 \\
10 & 0.00185 & 0.046278 & 0.148261 & 0.200847 \\
11 & 0.006618 & 0.298956 & 1.46741 & 2.38809 \\
12 & 0.024806 & 2.2416 & 14.5944 & 28.0128 \\
\end{tabular}


table_drawer output for raw brute-force:
Computations for single patterns:
Runtimes: 
\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.001588 & 0.013206 & 0.016639 & 0.012114 \\
9 & 0.004722 & 0.063982 & 0.094424 & 0.072522 \\
10 & 0.009175 & 0.299618 & 0.832143 & 0.958963 \\
11 & 0.037395 & 2.37787 & 9.53002 & 13.5185 \\
12 & 0.151866 & 19.068 & 112.187 & 198.764 \\
13 & 0.615651 & 153.8 & 1348.32 & 3032.45 \\
\end{tabular}
Computations for 231-extensions:
Runtimes: 
\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.000596 & 0.001298 & 0.001736 & 0.002315 \\
9 & 0.00231 & 0.005815 & 0.009202 & 0.01062 \\
10 & 0.009289 & 0.026824 & 0.049003 & 0.06274 \\
11 & 0.03736 & 0.124739 & 0.258738 & 0.362664 \\
12 & 0.151379 & 0.572241 & 1.34573 & 2.12052 \\
13 & 0.623822 & 2.60707 & 6.83837 & 11.9455 \\
14 & 2.49026 & 11.8011 & 34.3169 & 66.6236 \\
15 & 10.1558 & 53.0141 & 169.297 & 359.042 \\
16 & 41.2994 & 236.709 & 822.06 & 1906.53 \\
\end{tabular}
Computations for single patterns:
Runtimes: 
\begin{tabular}{l | l  l  l  l }
 & 3 & 4 & 5 & 6 \\ \hline
8 & 0.02184 & 0.020465 & 0.013512 & 0.007822 \\
9 & 0.25883 & 0.265057 & 0.187779 & 0.120815 \\
10 & 3.36125 & 3.76337 & 2.79108 & 1.94027 \\
11 & 46.9735 & 57.2166 & 44.3523 & 32.6216 \\
12 & 705.082 & 930.591 & 752.467 & 581.081 \\
\end{tabular}
Computations for multiple patterns:
Runtimes: 
\begin{tabular}{l | l  l  l }
 & 3 & 4 & 5 \\ \hline
8 & 0.021878 & 0.046843 & 0.054357 \\
9 & 0.258819 & 0.650249 & 0.911482 \\
10 & 3.36337 & 9.81897 & 16.1492 \\
11 & 46.9607 & 156.46 & 297.638 \\
12 & 704.189 & 2646.83 & 5746.63 \\
\end{tabular}
